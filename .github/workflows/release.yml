name: Build

permissions:
  packages: write

on:
  push:
    tags:
      - 'optimism/*'
      - 'op-geth/*'
      - 'op-proxyd/*'
      - 'bs-backend/*'
      - 'bs-frontend/*'

env:
  IMAGE_REPO: akgames-sn/build-hub

jobs:
  optimism:
    if: startsWith(github.ref_name, 'optimism/')
    name: optimism
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        id: setup
        uses: ./.github/workflows/setup
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          checkout-repo: AKGAMES-SN/optimism
          checkout-ssh-key: ${{ secrets.OPTIMISM_REPO_SSH_KEY }}
          checkout-path: app

      - name: Build and Push
        uses: docker/bake-action@v4
        env:
          REGISTRY: ghcr.io
          REPOSITORY: ${{ env.IMAGE_REPO }}
          GIT_COMMIT: ${{ steps.setup.outputs.commit-hash }}
          GIT_VERSION: ${{ steps.setup.outputs.ref }}
          IMAGE_TAGS: ${{ steps.setup.outputs.ref }}
        with:
          workdir: app
          files: docker-bake.hcl
          targets: op-node,op-batcher,op-proposer
          set: '*.platform=linux/amd64,linux/arm64'
          push: true

  op-geth:
    if: startsWith(github.ref_name, 'op-geth/')
    name: op-geth
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        id: setup
        uses: ./.github/workflows/setup
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          checkout-repo: ethereum-optimism/op-geth
          checkout-path: app

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: ./app
          file: ./Dockerfile.op-geth
          tags: ghcr.io/${{ env.IMAGE_REPO }}/op-geth:${{ steps.setup.outputs.ref }}
          build-args: |
            COMMIT=${{ steps.setup.outputs.commit-hash }}
            VERSION=${{ steps.setup.outputs.ref }}
            BUILDNUM=${{ github.run_id }}
          platforms: linux/amd64,linux/arm64
          push: true

  op-proxyd:
    if: startsWith(github.ref_name, 'op-proxyd/')
    name: op-proxyd
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        id: setup
        uses: ./.github/workflows/setup
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          checkout-repo: ethereum-optimism/infra
          checkout-path: app

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: ./app
          file: ./Dockerfile.op-proxyd
          tags: ghcr.io/${{ env.IMAGE_REPO }}/op-proxyd:${{ steps.setup.outputs.ref }}
          build-args: |
            GITCOMMIT=${{ steps.setup.outputs.commit-hash }}
            GITVERSION=${{ steps.setup.outputs.ref }}
          platforms: linux/amd64,linux/arm64
          push: true

  bs-backend:
    if: startsWith(github.ref_name, 'bs-backend/')
    name: bs-backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        id: setup
        uses: ./.github/workflows/setup
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          checkout-repo: blockscout/blockscout
          checkout-path: app

      - name: Set RELEASE_VERSION
        id: relver
        run: echo "out0=$(echo ${{ steps.setup.outputs.ref }} | egrep -o '[0-9.]+')" >> $GITHUB_OUTPUT

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: ./app
          file: ./Dockerfile.bs-backend
          tags: ghcr.io/${{ env.IMAGE_REPO }}/bs-backend:${{ steps.setup.outputs.ref }}
          build-args: |
            CACHE_EXCHANGE_RATES_PERIOD=""
            API_V1_READ_METHODS_DISABLED=false
            DISABLE_WEBAPP=false
            API_V1_WRITE_METHODS_DISABLED=false
            CACHE_TOTAL_GAS_USAGE_COUNTER_ENABLED=""
            CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=""
            ADMIN_PANEL_ENABLED=""
            RELEASE_VERSION=${{ steps.relver.outputs.out0 }}
          platforms: linux/amd64,linux/arm64
          push: true

  bs-frontend:
    if: startsWith(github.ref_name, 'bs-frontend/')
    name: bs-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        id: setup
        uses: ./.github/workflows/setup
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          checkout-repo: blockscout/frontend
          checkout-path: app

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: ./app
          file: ./Dockerfile.bs-frontend
          tags: ghcr.io/${{ env.IMAGE_REPO }}/bs-frontend:${{ steps.setup.outputs.ref }}
          build-args: |
            GIT_COMMIT_SHA=${{ steps.setup.outputs.commit-hash }}
            GIT_TAG=${{ steps.setup.outputs.ref }}
          platforms: linux/amd64,linux/arm64
          push: true
